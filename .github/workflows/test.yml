name: Testing and Code Analysis

on: [push, pull_request]

permissions:
  issues: write
  pull-requests: write

jobs:
  test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Backend Code
        uses: actions/checkout@v4

      - name: Setup Node.js for Backend
        uses: actions/setup-node@v3
        with:
          node-version: '20.11'

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci

      - name: Run Backend Tests with Coverage
        run: |
          cd backend
          npm test -- --coverage

      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage/lcov.info

      - name: Upload coverage reports to Codecov (Backend)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Andrew-Dagher/SOEN-390

  test_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Frontend Code
        uses: actions/checkout@v4

      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: '22.11'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Tests with Coverage
        run: |
          cd frontend
          npm run test -- --coverage

      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/lcov.info

      - name: Upload coverage reports to Codecov (Frontend)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Andrew-Dagher/SOEN-390

  sonar_scan:
    runs-on: ubuntu-latest
    needs: [test_backend, test_frontend]
    steps:
      - name: Checkout Code with Full History
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Java (Required for SonarCloud)
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk

      - name: Install SonarQube Scanner
        run: |
          curl -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          echo "export PATH=/opt/sonar-scanner/bin:$PATH" >> $HOME/.bashrc
          source $HOME/.bashrc
          export PATH="/opt/sonar-scanner/bin:$PATH"
          sonar-scanner --version

      - name: Download Backend Coverage Report
        uses: actions/download-artifact@v4  
        with:
          name: backend-coverage
          path: backend/coverage

      - name: Download Frontend Coverage Report
        uses: actions/download-artifact@v4  
        with:
          name: frontend-coverage
          path: frontend/coverage

      - name: Print Backend Coverage Report
        run: cat backend/coverage/lcov.info || echo "Backend coverage report not found"

      - name: Print Frontend Coverage Report
        run: cat frontend/coverage/lcov.info || echo "Frontend coverage report not found"

      - name: Run SonarCloud Analysis
        run: |
          export PATH="/opt/sonar-scanner/bin:$PATH"
          sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.projectKey=Andrew-Dagher_SOEN-390 \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.exclusions=**/__tests__/**,**/*.test.js \
            -Dsonar.coverage.exclusions=**/__tests__/**,**/*.test.js \
            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info || (echo "SonarCloud analysis failed" && exit 1)
      
      - name: Get SonarCloud Results
        run: "echo 'Check SonarCloud Report: https://sonarcloud.io/dashboard?id=Andrew-Dagher_SOEN-390&branch=${GITHUB_REF##*/}'"

  post_coverage:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [test_backend, test_frontend]
    steps:
      - name: Find Global Coverage Comment
        uses: peter-evans/find-comment@v1
        id: find_global
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '**Global Code Coverage Report**'

      - name: Create Global Coverage Comment
        if: ${{ steps.find_global.outputs.comment-id == '' }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Global Code Coverage Report**

            [![codecov](https://codecov.io/gh/Andrew-Dagher/SOEN-390/branch/${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}/graph/badge.svg)](https://app.codecov.io/github/Andrew-Dagher/SOEN-390/tree/${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }})
          reactions: rocket

      - name: Update Global Coverage Comment
        if: ${{ steps.find_global.outputs.comment-id != '' }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.find_global.outputs.comment-id }}
          body: |
            **Global Code Coverage Report**

            [![codecov](https://codecov.io/gh/Andrew-Dagher/SOEN-390/branch/${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}/graph/badge.svg)](https://app.codecov.io/github/Andrew-Dagher/SOEN-390/tree/${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }})
          reactions: hooray

name: Testing and Code Analysis

on: [push, pull_request]

permissions:
  issues: write
  pull-requests: write

jobs:

  test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11'

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci

      - name: Run Backend Tests with Coverage
        run: |
          cd backend
          npm test -- --coverage

      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage/lcov.info

  test_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.11'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Tests with Coverage
        run: |
          cd frontend
          npm run test -- --coverage

      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/lcov.info

  sonar_scan:
    runs-on: ubuntu-latest
    needs: [test_backend, test_frontend]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Java (Required for SonarCloud)
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk

      - name: Install SonarQube Scanner
        run: |
          curl -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          echo "export PATH=/opt/sonar-scanner/bin:$PATH" >> $HOME/.bashrc
          source $HOME/.bashrc
          export PATH="/opt/sonar-scanner/bin:$PATH"
          sonar-scanner --version

      - name: Download Backend Coverage Report
        uses: actions/download-artifact@v4  
        with:
          name: backend-coverage
          path: backend/coverage

      - name: Download Frontend Coverage Report
        uses: actions/download-artifact@v4  
        with:
          name: frontend-coverage
          path: frontend/coverage

      - name: Print Backend Coverage Report
        run: cat backend/coverage/lcov.info || echo "Backend coverage report not found"

      - name: Print Frontend Coverage Report
        run: cat frontend/coverage/lcov.info || echo "Frontend coverage report not found"

      - name: Extract Backend Coverage Percentage
        run: |
          COVERAGE=$(grep -o 'lines.*' backend/coverage/lcov.info | awk '{print $NF}')
          echo "BACKEND_COVERAGE=$COVERAGE" >> $GITHUB_ENV

      - name: Extract Frontend Coverage Percentage
        run: |
          COVERAGE=$(grep -o 'lines.*' frontend/coverage/lcov.info | awk '{print $NF}')
          echo "FRONTEND_COVERAGE=$COVERAGE" >> $GITHUB_ENV

      - name: Run SonarCloud Analysis
        run: |
          export PATH="/opt/sonar-scanner/bin:$PATH"
          sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.projectKey=Andrew-Dagher_SOEN-390 \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info || (echo "SonarCloud analysis failed" && exit 1)

      - name: Get SonarCloud Results
        run: "echo 'Check SonarCloud Report: https://sonarcloud.io/dashboard?id=SOEN390&branch=${GITHUB_REF##*/}'"

      - name: Comment Coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const coverageMessage = `
            ðŸš€ **Code Coverage Report** ðŸš€

            ðŸ”¹ **Backend Coverage**: \`${{ env.BACKEND_COVERAGE }}%\`
            ðŸ”¹ **Frontend Coverage**: \`${{ env.FRONTEND_COVERAGE }}%\`

            _View full details in [SonarCloud Report](https://sonarcloud.io/dashboard?id=SOEN390&branch=${{ github.ref_name }})_
            `;

            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: coverageMessage
            });

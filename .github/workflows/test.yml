name: Testing and Code Analysis

on: [push]

permissions:
  issues: write
  pull-requests: write

jobs:
  retrieve_branch:
    name: Retrieve Branch Name
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.set_branch.outputs.branch }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Determine Branch Name
        id: set_branch
        run: |
          echo "Event Name: ${{ github.event_name }}"
          # If this is a pull_request event, use the PR head ref. Otherwise, use the branch from GITHUB_REF.
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Branch from PR: ${{ github.event.pull_request.head.ref }}"
            echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
          else
            # For push events, GITHUB_REF is something like "refs/heads/main" 
            # so we strip off "refs/heads/" to get just the branch name.
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            echo "Branch from Push: $BRANCH_NAME"
            echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          fi

  test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Backend Code
        uses: actions/checkout@v4

      - name: Setup Node.js for Backend
        uses: actions/setup-node@v3
        with:
          node-version: '20.11'

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci

      - name: Run Backend Tests with Coverage and Save Summary
        run: |
          cd backend
          npm test -- --coverage | tee coverage_summary.txt

      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage/lcov.info

      - name: Upload Backend Coverage Summary
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-summary
          path: backend/coverage_summary.txt

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Andrew-Dagher/SOEN-390

  test_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Frontend Code
        uses: actions/checkout@v4

      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: '22.11'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Tests with Coverage and Save Summary
        run: |
          cd frontend
          npm run test -- --coverage | tee coverage_summary.txt

      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/lcov.info

      - name: Upload Frontend Coverage Summary
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-summary
          path: frontend/coverage_summary.txt

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Andrew-Dagher/SOEN-390

  sonar_scan:
    runs-on: ubuntu-latest
    needs: [test_backend, test_frontend, retrieve_branch]
    steps:
      - name: Checkout Code with Full History
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Java (Required for SonarCloud)
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk

      - name: Install SonarQube Scanner
        run: |
          curl -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          echo "export PATH=/opt/sonar-scanner/bin:$PATH" >> $HOME/.bashrc
          source $HOME/.bashrc
          export PATH="/opt/sonar-scanner/bin:$PATH"
          sonar-scanner --version

      - name: Download Backend Coverage Report
        uses: actions/download-artifact@v4  
        with:
          name: backend-coverage
          path: backend/coverage

      - name: Download Frontend Coverage Report
        uses: actions/download-artifact@v4  
        with:
          name: frontend-coverage
          path: frontend/coverage

      - name: Print Backend Coverage Report
        run: cat backend/coverage/lcov.info || echo "Backend coverage report not found"

      - name: Print Frontend Coverage Report
        run: cat frontend/coverage/lcov.info || echo "Frontend coverage report not found"

      - name: Run SonarCloud Analysis
        run: |
          export PATH="/opt/sonar-scanner/bin:$PATH"
          sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.projectKey=Andrew-Dagher_SOEN-390 \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.exclusions=**/__tests__/**,**/*.test.js \
            -Dsonar.coverage.exclusions=**/__tests__/**,**/*.test.js \
            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info || (echo "SonarCloud analysis failed" && exit 1)
      
      - name: Get SonarCloud Results
        run: "echo 'Check SonarCloud Report: https://sonarcloud.io/dashboard?id=Andrew-Dagher_SOEN-390&branch=${GITHUB_REF##*/}'"
